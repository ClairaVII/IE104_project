var rented_id = null;
var rented_name = null;
var rented_img = null;
var user_id = null;
var user_role = null;
getRentedCurrent();
getLoggedInUser();

function reloadCoins() {
    // Your coin reload logic goes here
    alert('Coins reloaded!');
}

function shareUserInfo() {
    // Th√™m logic x·ª≠ l√Ω cho ch·ª©c nƒÉng chia s·∫ª th√¥ng tin
    alert('Th√¥ng tin ƒë√£ ƒë∆∞·ª£c chia s·∫ª!');
}

function toggleFollow() {
    var button = document.getElementById("follow");

    // Ki·ªÉm tra xem n√∫t ƒë√£ c√≥ class 'following-btn' ch∆∞a
    var isFollowing = button.classList.contains("following");

    if (isFollowing) {
        button.innerHTML = "Theo d√µi";
    } else {
        button.innerHTML = "ƒêang theo d√µi";
    }

    // Chuy·ªÉn ƒë·ªïi gi·ªØa class 'follow-btn' v√† 'following'
    button.classList.toggle("follow-btn");
    button.classList.toggle("following");
}

window.addEventListener('scroll', () => {
    const nav = document.querySelector('nav');
    const brand = document.querySelector('.brand h1');

    // Th√™m ho·∫∑c x√≥a l·ªõp scrolled khi cu·ªôn trang
    nav.classList.toggle('scrolled', window.scrollY > 0);
    brand.classList.toggle('scrolled', window.scrollY > 0);
});

function filterSkills() {
    const input = document.querySelector('.skills-list input');
    const filter = input.value.toLowerCase();
    const skills = document.querySelectorAll('.scrollable-skills p');

    skills.forEach(skill => {
        const skillText = skill.innerText.toLowerCase();
        skill.style.display = skillText.includes(filter) ? 'block' : 'none';
    });
}

function displayImage(imagePath) {
    // C·∫≠p nh·∫≠t ƒë∆∞·ªùng d·∫´n ·∫£nh trong ph·∫ßn t·ª≠ hi·ªÉn th·ªã
    document.getElementById('selectedImage').src = imagePath;
}

function shareUserInfo() {
    // L·∫•y ID t·ª´ n∆°i b·∫°n l∆∞u tr·ªØ ID (trong tr∆∞·ªùng h·ª£p n√†y, t√¥i gi·∫£ s·ª≠ b·∫°n ƒë√£ c√≥ m·ªôt ph·∫ßn t·ª≠ v·ªõi ID 'userIdContainer')
    var userId = document.getElementById('userIdContainer').innerText;

    // G·ªçi h√†m ƒë·ªÉ sao ch√©p v√†o Clipboard
    copyToClipboard(userId);

    // Th√¥ng b√°o cho ng∆∞·ªùi d√πng bi·∫øt r·∫±ng ID ƒë√£ ƒë∆∞·ª£c sao ch√©p
    alert('ID ƒë√£ ƒë∆∞·ª£c sao ch√©p v√†o Clipboard!');
}

function copyToClipboard(text) {
    // T·∫°o m·ªôt th·∫ª textarea ·∫©n ƒë·ªÉ ch·ª©a vƒÉn b·∫£n c·∫ßn sao ch√©p
    var textarea = document.createElement('textarea');
    textarea.value = text;

    // Th√™m textarea v√†o trang web
    document.body.appendChild(textarea);

    // Ch·ªçn n·ªôi dung c·ªßa textarea
    textarea.select();

    // Th·ª±c hi·ªán thao t√°c sao ch√©p v√†o Clipboard
    document.execCommand('copy');

    // X√≥a textarea sau khi ƒë√£ sao ch√©p
    document.body.removeChild(textarea);
}

const orderData = {
    playerName: rented_name ,
};

let price;

function displayOrderDetails() {
    console.log(user_id);
    if (user_id == null){
        alert ("Ch∆∞a ƒëƒÉng nh·∫≠p t√†i kho·∫£n!");
    }
    else{
        const orderData = {
            playerName: rented_name ,
        };
    
        // L·∫•y gi√° tr·ªã t·ª´ data attributes c·ªßa option ƒë∆∞·ª£c ch·ªçn
        var selectedOption = document.getElementById("gameSelect").options[document.getElementById("gameSelect").selectedIndex];
        var gameName = selectedOption.dataset.name;
        price = selectedOption.dataset.price;
        price = parseFloat(price);
        const orderDetails = document.getElementById("order-details");
        const quantityInput = document.createElement("input");
        quantityInput.type = "number";
        quantityInput.min = "1";
        quantityInput.value = 1;
        quantityInput.id = "quantityInput";
    
        orderDetails.innerHTML = `
        <div style="display: flex; align-items: center; margin-bottom: 10px;">
            <img src="${rented_img}" alt="" style="width: 50px; height: 50px; border-radius: 50%; margin-right: 10px;">
            <p><strong>${orderData.playerName}</strong></p>
        </div>
        <div style="margin-bottom: 10px;">
            <p>D·ªãch V·ª•: ${gameName}</p>
            <p>ƒê∆°n Gi√°: ${price} üí∞/tr·∫≠n</p>
        </div>
        <div style="margin-bottom: 10px;">
            <p>S·ªë L∆∞·ª£ng: <input type="number" min="1" value="1" id="quantityInput"></p>
        </div>`;
    
        const totalValueElement = document.createElement("p");
        totalValueElement.id = "totalValue";
        orderDetails.appendChild(totalValueElement);
    
        document.getElementById("quantityInput").addEventListener("input", updateTotalValue);
    
        openModal();
        updateTotalValue();
    }
}

function updateTotalValue() {
    const quantityInput = document.getElementById("quantityInput");
    const totalValueElement = document.getElementById("totalValue");
    const quantity = parseInt(quantityInput.value);

    if (!isNaN(quantity) && quantity >= 1) {
        const totalValue = quantity * price;
        totalValueElement.textContent = `T·ªïng Gi√° Tr·ªã: ${totalValue} üí∞`;
    }
}

async function confirmOrder() {
    alert('ƒê∆°n h√†ng ƒë√£ ƒë∆∞·ª£c x√°c nh·∫≠n!');
    closeModal();

    var selectedOption = document.getElementById("gameSelect").options[document.getElementById("gameSelect").selectedIndex];
    var gameId = selectedOption.dataset.value;
    const quantityInput = document.getElementById("quantityInput");
    const quantity = parseInt(quantityInput.value);
    const totalValue = quantity * price;

    const response = await fetch('/Order/orderConfirm', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({ rented_Id: rented_id, game_Id: gameId, number_match: quantity, total: totalValue })
      });

    // Show a success feedback pop-up
    const feedbackPopup = document.createElement("div");
    feedbackPopup.innerHTML = "<p>ƒê√£ ƒë·∫∑t th√†nh c√¥ng!</p>";
    feedbackPopup.style.position = "fixed";
    feedbackPopup.style.top = "50%";
    feedbackPopup.style.left = "50%";
    feedbackPopup.style.transform = "translate(-50%, -50%)";
    feedbackPopup.style.backgroundColor = "#4CAF50";
    feedbackPopup.style.color = "#fff";
    feedbackPopup.style.padding = "15px";
    feedbackPopup.style.borderRadius = "10px";
    document.body.appendChild(feedbackPopup);

    // Automatically close the feedback pop-up after 3 seconds
    setTimeout(() => {
        document.body.removeChild(feedbackPopup);
        window.location.href = "http://localhost:3000/Order";
    }, 1000);
    // Th√™m h√†m n√†y ƒë·ªÉ c·∫≠p nh·∫≠t s·ªë ng∆∞·ªùi theo d√µi v√† s·ªë xu

function updateStats() {
        // Gi·∫£ s·ª≠ b·∫°n c√≥ c√°c bi·∫øn ƒë·ªÉ l∆∞u tr·ªØ s·ªë ng∆∞·ªùi theo d√µi v√† s·ªë xu
        const followersCount = 200;
        const coinsCount = 1000;
        const followingCount = 100
        // C·∫≠p nh·∫≠t c√°c ph·∫ßn t·ª≠ HTML
        document.getElementById('followersCount').innerText = followersCount;
        document.getElementById('coinsCount').innerText = coinsCount;
}

    // G·ªçi h√†m updateStats khi trang web t·∫£i xong
    document.addEventListener('DOMContentLoaded', updateStats);
}

// Hi·ªÉn th·ªã th√¥ng tin khi trang web ƒë∆∞·ª£c t·∫£i
window.onload = function () {
    // M·∫∑c ƒë·ªãnh hi·ªÉn th·ªã th√¥ng tin c·ªßa game ƒë·∫ßu ti√™n
    document.getElementById("gameImage").src = document.getElementById("gameSelect").options[0].getAttribute("data-image");
    document.getElementById("gameName").textContent = "T√™n Game: " + document.getElementById("gameSelect").options[0].getAttribute("data-name");
    document.getElementById("gamePrice").textContent = "ƒê∆°n gi√°: " + document.getElementById("gameSelect").options[0].getAttribute("data-price");
};

// Show modal function
function openModal() {
    document.getElementById('confirmationModal').style.display = 'flex';
}

function closeModal() {
    document.getElementById('confirmationModal').style.display = 'none';
}

async function setUpLogIn(){
    if (user_role == "renter"){
        const response = await fetch('/Data/Renters');
        const result = await response.json();
        document.getElementById("tools-button").style.display = "flex";
        document.getElementById("recharge-button").style.display = "flex";
        document.getElementById("login-button").style.display = "none";

        result.forEach(item => {
            if (item._id == user_id){
                const Birthday = new Date(item.joining_date);
                const year = Birthday.getFullYear();
                const month = (Birthday.getMonth() + 1).toString().padStart(2, '0'); 
                const day = Birthday.getDate().toString().padStart(2, '0');

                document.getElementById("money").textContent = item.money;
                if (item.avatar != ''){
                    document.getElementById("avatar1").src = item.avatar;
                    document.getElementById("avatar2").src = item.avatar;
                }
                document.getElementById("user-info-name").textContent = item.name;
                document.getElementById("user-info-id").textContent = "ID: " + item._id;
                document.getElementById("joining-date").textContent = "Ng√†y tham gia: " + day + "-" + month + "-" + year;
            }
        })
    }
    else {
        const response = await fetch('/Data/Rented_persons');
        const result = await response.json();
        document.getElementById("tools-button").style.display = "flex";
        document.getElementById("login-button").style.display = "none";

        result.forEach(item => {
            if (item._id == user_id){
                const Birthday = new Date(item.joining_date);
                const year = Birthday.getFullYear();
                const month = (Birthday.getMonth() + 1).toString().padStart(2, '0'); 
                const day = Birthday.getDate().toString().padStart(2, '0');

                document.getElementById("money").textContent = item.money;
                if (item.avatar != ""){
                    console.log(item.avatar);
                    document.getElementById("avatar1").src = item.avatar;
                    document.getElementById("avatar2").src = item.avatar;
                }
                document.getElementById("user-info-name").textContent = item.name;
                document.getElementById("user-info-id").textContent = "ID: " + item._id;
                document.getElementById("joining-date").textContent = "Ng√†y tham gia: " + day + "-" + month + "-" + year;
            }
        })
    }
}

async function selectGame(service){
    const response = await fetch('/Data/Services');
    const data = await response.json();

    const gameSelect = document.getElementById("order_list");
    const selectElement = document.createElement("select");
    selectElement.id = "gameSelect";
    selectElement.name = "game";
    gameSelect.appendChild(selectElement);

    service.forEach(sv => {
        data.forEach(game => {
            if (sv == game._id){    
                    const option = document.createElement('option');
                    option.dataset.value = game._id;
                    option.dataset.image = game.img;
                    option.dataset.name = game.name;
                    option.dataset.price = '50üí∞';
                    option.textContent = game.name;
                    selectElement.appendChild(option);
            }
        })
    })

    var selectedOption = document.getElementById("gameSelect").options[document.getElementById("gameSelect").selectedIndex];
    var imageSource = selectedOption.dataset.image;
    var gameName = selectedOption.dataset.name;
    var price = selectedOption.dataset.price;
    
    // Hi·ªÉn th·ªã th√¥ng tin c·ªßa game ƒë∆∞·ª£c ch·ªçn
    document.getElementById("gameImage").src = imageSource;
    document.getElementById("gameName").textContent = "T√™n Game: " + gameName;
    document.getElementById("gamePrice").textContent = "ƒê∆°n gi√°: " + price;

    document.getElementById("gameSelect").addEventListener("change", function () {
        // L·∫•y gi√° tr·ªã t·ª´ data attributes c·ªßa option ƒë∆∞·ª£c ch·ªçn
        const selectedOption = this.options[this.selectedIndex];
        var imageSource = selectedOption.dataset.image;
        var gameName = selectedOption.dataset.name;
        var price = selectedOption.dataset.price;
    
        // Hi·ªÉn th·ªã th√¥ng tin c·ªßa game ƒë∆∞·ª£c ch·ªçn
        document.getElementById("gameImage").src = imageSource;
        document.getElementById("gameName").textContent = "T√™n Game: " + gameName;
        document.getElementById("gamePrice").textContent = "ƒê∆°n gi√°: " + price;
    });
}

async function getRentedData(){
    const response = await fetch('/Data/Rented_persons');
    const result = await response.json();

    result.forEach(item => {
        if (item._id == rented_id){
            const Birthday = new Date(item.birthday);
            const year_birthday = Birthday.getFullYear();
            const month_birthday = (Birthday.getMonth() + 1).toString().padStart(2, '0'); 
            const day_birthday = Birthday.getDate().toString().padStart(2, '0');

            const Joing = new Date(item.joining_date);
            const year_joing = Joing.getFullYear();
            const month_joing = (Joing.getMonth() + 1).toString().padStart(2, '0'); 
            const day_joing = Joing.getDate().toString().padStart(2, '0');

            document.getElementById("user_name").textContent = item.name;
            document.getElementById("user_id").textContent = "ID: " + item._id;
            document.getElementById("user_avatar1").src = item.avatar;
            document.getElementById("user_avatar2").src = item.avatar;

            document.getElementById("pr_name").textContent = "H·ªç t√™n: " + item.name;
            document.getElementById("pr_birthday").textContent = "Ng√†y sinh: " + day_birthday + "-" + month_birthday + "-" + year_birthday;
            document.getElementById("pr_address").textContent = "ƒê·ªãa ch·ªâ: " + item.address;
            document.getElementById("pr_phone").textContent = "S·ªë ƒëi·ªán tho·∫°i: " +item.phone;
            document.getElementById("pr_email").textContent = "Email: " + item.email;
            document.getElementById("pr_joningDay").textContent = "Ng√†y ƒëƒÉng k√≠: " + day_joing + "-" + month_joing + "-" + year_joing;
            document.getElementById("pr_numberOfRentals").textContent = "ƒê√£ ph·ª•c v·ª•: " + item.number_of_rentals;
            document.getElementById("pr_evaluate").textContent = "ƒê√°nh gi√°: " + item.evaluate + "‚≠ê";

            rented_name = item.name;
            rented_img = item.avatar;

            selectGame(item.service);
        }
    })
}

async function getLoggedInUser() {
    const response = await fetch('/Logged-In-User');
    const result = await response.json();

    if (result.loggedIn) {
      user_id = result.userId;
      user_role = result.type;
      setUpLogIn();
    } else {
      console.log('Kh√¥ng c√≥ user tr√™n server');
    }
}

async function getRentedCurrent() {
    const response = await fetch('/Home/Rented_Current');
    const result = await response.json();

    if (result.rentedId != ""){
        rented_id = result.rentedId;
        getRentedData();
    }
}

async function lognout() {
    const response = await fetch('/Logout', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({ userId: null, type: null })
    });
    window.location.href = "http://localhost:3000";
}

function redirectToRecharge(){
    window.location.href = "http://localhost:3000/Recharge";
}

function adjustUserInfo(){
    window.location.href = "http://localhost:3000/Infor";
}

async function redirectToHome(interact){
    const response = await fetch('/Order/interactHome', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({ interact: interact })
    });

    window.location.href = "http://localhost:3000";
}

async function redirectToOrder(ID){
    const response = await fetch('/Home/Rented', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({ rentedId: ID })
      });
    const responseData = await response.json();
    window.location.href = "http://localhost:3000/Order";
}

getTopStar();
async function getTopStar(){
    const response = await fetch('/Data/Rented_persons');
    const data = await response.json();
    var rented = [];

    data.forEach(item => {
        rented.push(item._id);
    })

    rented.sort((a, b) => b - a);

    const start_list = document.getElementById("star_list");
    const fiveLargest = rented.slice(0, 5);

    const selectElement = document.createElement("ul");
    selectElement.classList.add("star-list");
    fiveLargest.forEach(fl => {
        data.forEach(item => {
            if (fl == item._id){
                selectElement.innerHTML += `
                    <li onclick="redirectToOrder('${item._id}')">${item.name} - ${item.number_of_rentals} l∆∞·ª£t thu√™</li>`;
            }
        })
    })
    start_list.appendChild(selectElement);
}
